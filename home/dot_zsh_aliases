# -*- shell-script -*-
alias ls='lsd -al --color=always --group-directories-first' # my preferred listing
alias la='lsd -a --color=always --group-directories-first'  # all files and dirs
alias ll='lsd -l --color=always --group-directories-first'  # long format
alias lt='lsd -aT --color=always --group-directories-first' # tree listing
alias l.='lsd -al --color=always --group-directories-first ../' # ls on the PARENT directory
alias l..='lsd -al --color=always --group-directories-first ../../' # ls on directory 2 levels up
alias l...='lsd -al --color=always --group-directories-first ../../../' # ls on directory 3 levels up

alias df='df -h'               # human-readable sizes
alias cz='chezmoi'
alias grep='grep --color=auto' # colorize output (good for log files)
alias du='du --max-depth=1 -h'
alias ftldr='compgen -c | fzf | xargs tldr'
alias fman='compgen -c | fzf | xargs man'

alias cat='bat'
alias emacs="emacsclient -c -a 'emacs'" # GUI versions of Emacs
alias em="/usr/bin/emacs -nw" # Terminal version of Emacs
alias vim="nvim"
alias vi="\vim"

alias viz='chezmoi edit .zshrc'
alias vit='chezmoi edit ~/.config/tmux/tmux.conf'
alias vic='chezmoi edit'
alias src='source ~/.zshrc'
alias tsrc='tmux source ~/.config/tmux/tmux.conf'

alias t='tmux attach || tmux new-session'
alias ta='tmux attach -t'
alias tn='tmux new-session'
alias tls='tmux list-sessions'

alias cd..='cd ..'
alias ..='cd ..'
alias ...='cd ../..'
alias cd ...='cd ../..'
alias .3='cd ../../..'
alias .4='cd ../../../..'
alias .5='cd ../../../../..'

alias :q='exit'

alias c='clear'

alias rem="killall emacs || echo 'Emacs server not running'; /usr/bin/emacs --daemon" # Kill Emacs and restart daemon..

# Aliases under tmux
if [ -n "$TMUX" ]; then
  # Inside tmux
  unalias ssh 2>/dev/null
  alias td='tmux detach'
else
  # Outside tmux
  alias ssh='kitten ssh'
fi

function fcd() {
  local folder=$(fd --type d --max-depth 1 --exclude .git --exclude target | fzf)
  if [[ -n "$folder" ]]; then
    cd "$folder"
  fi
}

cdls() {
        local dir="$1"
        local dir="${dir:=$HOME}"
        if [[ -d "$dir" ]]; then
                cd "$dir" >/dev/null; lsd --color=auto
        else
                echo "bash: cdls: $dir: Directory not found"
        fi
}

mkcd() {
    mkdir -p "$1" && cd "$1"
}

function extract {
    if [ -z "$1" ]; then
        echo "Usage: extract <path/file_name>.<zip|rar|bz2|gz|tar|tbz2|tgz|Z|7z|xz|ex|tar.bz2|tar.gz|tar.xz>"
        echo "       extract <path/file_name_1.ext> [path/file_name_2.ext] [path/file_name_3.ext]"
        return 0
    fi

    for n in "$@"
    do
    if [ -f "$n" ] ; then
        case "${n%,}" in
            *.cbt|*.tar.bz2|*.tar.gz|*.tar.xz|*.tbz2|*.tgz|*.txz|*.tar)
                         tar xvf "$n"       ;;
            *.lzma)      unlzma ./"$n"      ;;
            *.bz2)       bunzip2 ./"$n"     ;;
            *.cbr|*.rar)       unrar x -ad ./"$n" ;;
            *.gz)        gunzip ./"$n"      ;;
            *.cbz|*.epub|*.zip)       unzip ./"$n"       ;;
            *.z)         uncompress ./"$n"  ;;
            *.7z|*.apk|*.arj|*.cab|*.cb7|*.chm|*.deb|*.dmg|*.iso|*.lzh|*.msi|*.pkg|*.rpm|*.udf|*.wim|*.xar)
                         7z x ./"$n"        ;;
            *.xz)        unxz ./"$n"        ;;
            *.exe)       cabextract ./"$n"  ;;
            *.cpio)      cpio -id < ./"$n"  ;;
            *.cba|*.ace)      unace x ./"$n"      ;;
            *.zpaq)      zpaq x ./"$n"      ;;
            *.arc)         arc e ./"$n"       ;;
            *.cso)       ciso 0 ./"$n" ./"$n.iso" && \
                              extract "$n".iso && \rm -f "$n" ;;
            *)
                         echo "extract: '$n' - unknown archive method"
                         return 1
                         ;;
        esac
    else
        echo "'$n' - file does not exist"
        return 1
    fi
    done
}
